apply plugin: 'com.android.application'

dependencies {
    //compile 'com.android.support:support-v4:18.0.+' // already in actionbarsherlock
    compile project(':libraries:Donations')
    compile project(':libraries:actionbarsherlock')
    compile project(':libraries:HtmlTextView')
    compile project(':libraries:RootCommands')
    compile 'net.sf.trove4j:trove4j:3.0.3'
}

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 23

    sourceSets.main {
            jni.srcDirs = []
            jniLibs.srcDir 'libs'
        }
    }

    /*
     * To sign release build, create file gradle.properties in ~/.gradle/ with this content:
     *
     * signingStoreLocation=/home/key.store
     * signingStorePassword=xxx
     * signingKeyAlias=alias
     * signingKeyPassword=xxx
     */
    if (project.hasProperty('signingStoreLocation') &&
            project.hasProperty('signingStorePassword') &&
            project.hasProperty('signingKeyAlias') &&
            project.hasProperty('signingKeyPassword')) {
        println "Found sign properties in gradle.properties! Signing buildâ€¦"

        signingConfigs {
            release {
                storeFile file(signingStoreLocation)
                storePassword signingStorePassword
                keyAlias signingKeyAlias
                keyPassword signingKeyPassword
            }
        }

        buildTypes.release.signingConfig = signingConfigs.release
    } else {
        buildTypes.release.signingConfig = null
    }

    // Do not abort build if lint finds errors
    lintOptions {
        abortOnError false
    }

    task ndkBuild(type: Exec) {
        if (System.getProperty('os.name').toLowerCase().contains('windows')) {
            commandLine 'ndk-build.cmd', '-j4'
        }else{
            commandLine 'ndk-build', '-j4'
        }
    }

     /**
     * Task to rename executables from hello_world to libhello_world_exec.so
     * If they look like libraries, they are packaged in the apk and deployed on the device in the lib folder!
     *
     * http://www.gradle.org/docs/current/userguide/working_with_files.html
     */
    task renameExecutables(type: Copy) {
        from 'libs'
        into 'libs'
        include '**/*'
        exclude '**/*.so'
        exclude '**/*.jar'

        rename(/(.+)/, 'lib$1_exec.so')
    }
    build.dependsOn renameExecutables
    tasks.withType(JavaCompile) {
        compileTask -> compileTask.dependsOn ndkBuild, renameExecutables
    }
}



